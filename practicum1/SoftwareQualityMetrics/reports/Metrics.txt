Calculation of Software Quality Metrics for system: TestSoftwareQualityMetrics
Start calculating Cyclomatic Complexity and Unit size
Walk through all methods
2
Method: |java+method:///ClassA/getHNotDuplicatedTooSmall()|, loc 2, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+method:///ClassB/getHNotDuplicatedTooSmall()|, loc 2, cc: 1, cc rank: simple, unit size: simple
7
Method: |java+method:///ClassB/getHAndJDuplicated6Lines()|, loc 7, cc: 1, cc rank: simple, unit size: simple
10
Method: |java+method:///ClassB/veryComplexCC4AndDuplicated()|, loc 10, cc: 4, cc rank: simple, unit size: simple
4
Method: |java+method:///PackageA/EenClass/AMethod()|, loc 4, cc: 2, cc rank: simple, unit size: simple
7
Method: |java+method:///ClassC/contentsOfMethodIsDuplicatedInThisClass1()|, loc 7, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+method:///ClassA/testMethod2()|, loc 2, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+method:///ClassA/testMethod3()|, loc 2, cc: 1, cc rank: simple, unit size: simple
10
Method: |java+method:///ClassA/veryComplexAndDuplicated()|, loc 10, cc: 4, cc rank: simple, unit size: simple
4
Method: |java+method:///PackageB/EenClass/MethodQwerty(java.lang.String,int)|, loc 4, cc: 2, cc rank: simple, unit size: simple
6
Method: |java+method:///ClassA/getHAndJDuplicated6Lines()|, loc 6, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+constructor:///PackageA/SubPackageA/SubClassA/SubClassA(int)|, loc 2, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+method:///ClassA/testMethod1()|, loc 2, cc: 1, cc rank: simple, unit size: simple
7
Method: |java+method:///ClassC/contentsOfMethodIsDuplicatedInThisClass2()|, loc 7, cc: 1, cc rank: simple, unit size: simple
2
Method: |java+method:///PackageA/SubPackageA/SubClassA/Method1()|, loc 2, cc: 1, cc rank: simple, unit size: simple
14
Method: |java+method:///ClassB/conplexCC6NotDuplicated()|, loc 14, cc: 6, cc rank: simple, unit size: simple
CC loc Total methods: 83.0, loc Simple: (100. %), loc Moderate: 0.0 (0. %), loc High: 0.0 (0. %), loc Very High: 0.0 (0. %)
CC rank moderate: ++ (1), rank high: ++ (1), rank very high: ++ (1)
Unit Size loc Total methods: 83.0, loc Simple: 83.0 (100. %), loc Moderate: 0.0 (0. %), loc High: 0.0 (0. %), loc Very High: 0.0 (0. %)
Unit Size rank moderate: ++ (1), rank high: ++ (1), rank very high: ++ (1)
Start calculating Cyclomatic Complexity and Unit size
Walk through all methods
Method: |java+method:///ClassA/getHNotDuplicatedTooSmall()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassB/getHNotDuplicatedTooSmall()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassB/getHAndJDuplicated6Lines()|, loc 7, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassB/veryComplexCC4AndDuplicated()|, loc 10, cc: 4, cc rank: simple, unit size: simple
Method: |java+method:///PackageA/EenClass/AMethod()|, loc 4, cc: 2, cc rank: simple, unit size: simple
Method: |java+method:///ClassC/contentsOfMethodIsDuplicatedInThisClass1()|, loc 7, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassA/testMethod2()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassA/testMethod3()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassA/veryComplexAndDuplicated()|, loc 10, cc: 4, cc rank: simple, unit size: simple
Method: |java+method:///PackageB/EenClass/MethodQwerty(java.lang.String,int)|, loc 4, cc: 2, cc rank: simple, unit size: simple
Method: |java+method:///ClassA/getHAndJDuplicated6Lines()|, loc 6, cc: 1, cc rank: simple, unit size: simple
Method: |java+constructor:///PackageA/SubPackageA/SubClassA/SubClassA(int)|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassA/testMethod1()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassC/contentsOfMethodIsDuplicatedInThisClass2()|, loc 7, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///PackageA/SubPackageA/SubClassA/Method1()|, loc 2, cc: 1, cc rank: simple, unit size: simple
Method: |java+method:///ClassB/conplexCC6NotDuplicated()|, loc 14, cc: 6, cc rank: simple, unit size: simple
CC loc Total methods: 83.0, loc Simple: (100. %), loc Moderate: 0.0 (0. %), loc High: 0.0 (0. %), loc Very High: 0.0 (0. %)
CC rank moderate: ++ (1), rank high: ++ (1), rank very high: ++ (1)
Unit Size loc Total methods: 83.0, loc Simple: 83.0 (100. %), loc Moderate: 0.0 (0. %), loc High: 0.0 (0. %), loc Very High: 0.0 (0. %)
Unit Size rank moderate: ++ (1), rank high: ++ (1), rank very high: ++ (1)
